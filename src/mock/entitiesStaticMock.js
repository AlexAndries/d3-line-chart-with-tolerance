import * as d3 from 'd3';

export const entitiesMock = [
  {
    entity: '127.0.0.1',
    color: d3.schemePaired[0],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
  {
    entity: '127.0.0.2',
    color: d3.schemePaired[1],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
  {
    entity: '127.0.0.3',
    color: d3.schemePaired[2],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
  {
    entity: '127.0.0.4',
    color: d3.schemePaired[3],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
  {
    entity: '127.0.0.5',
    color: d3.schemePaired[4],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
  {
    entity: '127.0.0.6',
    color: d3.schemePaired[5],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
  {
    entity: '127.0.0.7',
    color: d3.schemePaired[6],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
  {
    entity: '127.0.0.8',
    color: d3.schemePaired[7],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
  {
    entity: '127.0.0.9',
    color: d3.schemePaired[8],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
  {
    entity: '127.0.0.10',
    color: d3.schemePaired[9],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
  {
    entity: '127.0.0.11',
    color: d3.schemePaired[10],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
  {
    entity: '127.0.0.12',
    color: d3.schemePaired[11],
    feature_1: Math.floor(Math.random() * 1000),
    feature_2: Math.floor(Math.random() * 1000),
    feature_3: Math.floor(Math.random() * 1000),
    feature_4: Math.floor(Math.random() * 1000),
    feature_5: Math.floor(Math.random() * 1000),
    feature_6: Math.floor(Math.random() * 1000),
    feature_7: Math.floor(Math.random() * 1000),
    feature_8: Math.floor(Math.random() * 1000),
    feature_9: Math.floor(Math.random() * 1000),
  },
];
